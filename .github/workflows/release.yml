name: "Build & Release HTMLExtensions"

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: "Version (e.g. 0.1.6). If omitted, use tag name on push."
        required: false
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ inputs.version }}
      BRANCH: master   # change to main if needed

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          scope: "@evotecit"

      - name: Install dependencies (ci with lock, or create lockfile first)
        shell: bash
        run: |
          set -e
          if [ ! -f package-lock.json ]; then
            echo "No package-lock.json; generating lockfile..."
            npm install --package-lock-only
          fi
          npm ci

      - name: Derive version from tag (if not provided)
        id: ver
        shell: bash
        run: |
          set -e
          VER="${{ inputs.version }}"
          if [ -z "$VER" ] && [[ "${GITHUB_REF_NAME}" == v* ]]; then
            VER="${GITHUB_REF_NAME#v}"
          fi
          echo "version=$VER" >> $GITHUB_OUTPUT

      - name: Bump package.json version (if present)
        if: steps.ver.outputs.version != ''
        run: |
          if [ -f package.json ]; then
            node -e "let f='package.json',p=require('./'+f);p.version='${{ steps.ver.outputs.version }}';require('fs').writeFileSync(f, JSON.stringify(p,null,2)+'\n')"
          fi

      - name: Lint/Format sources
        run: npm run format

      - name: Check formatting
        run: npm run format:check

      - name: Build dist
        run: npm run build

      - name: Copy dist into docs for site
        run: |
          mkdir -p docs/dist
          rsync -a --delete dist/ docs/dist/

      - name: Commit dist (and package.json if changed)
        run: |
          git config user.name  "evotec-bot"
          git config user.email "actions@users.noreply.github.com"
          git add dist/ docs/dist/ package.json 2>/dev/null || true
          if ! git diff --cached --quiet; then
            git commit -m "chore(release): dist for v$VERSION"
            git push origin HEAD:$BRANCH
          fi

      - name: Create tag (skip if exists) [workflow_dispatch only]
        if: github.event_name == 'workflow_dispatch'
        run: |
          TAG="v$VERSION"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG exists; skipping."
          else
            git tag -a "$TAG" -m "HTMLExtensions $TAG"
            git push origin "$TAG"
          fi

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || format('v{0}', steps.ver.outputs.version) }}
          name: ${{ github.ref_type == 'tag' && github.ref_name || format('v{0}', steps.ver.outputs.version) }}
          files: dist/**

      - name: Publish to npm (only if token present)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -n "$NODE_AUTH_TOKEN" ]; then
            if [ -f package.json ]; then
              npm publish --access public || echo "npm publish failed; continuing."
            else
              echo "package.json missing; skipping npm publish."
            fi
          else
            echo "NPM_TOKEN not set â€” skipping npm publish."
          fi
